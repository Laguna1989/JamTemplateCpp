name: Deployment

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write


jobs:
  WindowsSFML:
    runs-on: windows-latest
    steps:
      - name: Set up cmake
        uses: jwlawson/actions-setup-cmake@v1.11
        with:
          cmake-version: '3.19.x'

      - uses: actions/checkout@v2

      - name: CMake
        run: cmake -B ${{github.workspace}}/build -DJT_ENABLE_UNITTESTS=OFF -DCMAKE_BUILD_TYPE=Release -DJT_ENABLE_DEBUG=OFF -DJT_ENABLE_DEMOS=OFF .

      - name: Build
        working-directory: ${{github.workspace}}/build
        run: cmake --build . --config Release

      - name: Copy files
        run: |
          mkdir ${{github.workspace}}/release
          mkdir ${{github.workspace}}/release/release_win
          cp ${{github.workspace}}/build/impl/game/Release/*.exe ${{github.workspace}}/release/release_win/
          cp -r ${{github.workspace}}/build/impl/game/assets ${{github.workspace}}/release/release_win/

      - name: Create Archive
        uses: thedoctor0/zip-release@master
        with:
          directory: ${{github.workspace}}/release
          type: 'zip'
          filename: 'release_win.zip'

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{github.workspace}}/release/release_win.zip

  LinuxSFML:
    runs-on: ubuntu-latest
    steps:
      - name: Set up cmake
        uses: jwlawson/actions-setup-cmake@v1.11
        with:
          cmake-version: '3.19.x'
      - uses: actions/checkout@v2

      - name: Install system-wide dependencies
        run: sudo apt-get update && sudo apt-get install -y libsfml-dev rsync

      - name: CMake
        run: cmake -B ${{github.workspace}}/build -DJT_ENABLE_UNITTESTS=OFF -DCMAKE_BUILD_TYPE=Release -DJT_ENABLE_DEMOS=OFF .

      - name: Build
        working-directory: ${{github.workspace}}/build
        run: cmake --build . --config Release

      - name: Copy files
        run: |
          export RELEASE_NAME=$(echo "${GITHUB_REPOSITORY}" | sed 's/^[^\/]*\///g')
          mkdir -p ${{github.workspace}}/release/${RELEASE_NAME}_linux
          cd ${{github.workspace}}/build/impl/game/
          rsync -avr --exclude="Makefile" --exclude="CMakeFiles" --exclude="*.cmake" . ${{github.workspace}}/release/${RELEASE_NAME}_linux
          cd ${{github.workspace}}/release
          tar -czvf ${{github.workspace}}/release/release_linux-x86_64.tar.gz ${RELEASE_NAME}_linux

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{github.workspace}}/release/release_linux-x86_64.tar.gz

  WebSDL:
    runs-on: ubuntu-latest
    env:
      EMCC_CCACHE: 1
    steps:
      - name: Set up cmake
        uses: jwlawson/actions-setup-cmake@v1.11
        with:
          cmake-version: '3.19.x'

      - name: Set up gcc
        uses: egor-tensin/setup-gcc@v1
        with:
          version: 9
          platform: x64

      - uses: mymindstorm/setup-emsdk@v9

      - uses: actions/checkout@v2

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: ${{ github.job }}-${{ matrix.os }}-${{ matrix.type }}
          max-size: 100M

      - name: CMake
        run: |
          emcmake cmake -B ${{github.workspace}}/build \
          -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
          -DJT_ENABLE_DEMOS=OFF \
          -DJT_ENABLE_UNITTESTS=OFF \
          -DJT_ENABLE_WEB=ON \
          -DUSE_SFML=OFF .

      - name: Build
        working-directory: ${{github.workspace}}/build
        run: emmake make

      - name: Copy files
        run: cp ${{github.workspace}}/index.html ${{github.workspace}}/build/impl/game/index.html

      - name: Copy files
        run: |
          mkdir ${{github.workspace}}/release
          mkdir ${{github.workspace}}/release/release_web
          cp ${{github.workspace}}/index.html ${{github.workspace}}/release/release_web/
          cp ${{github.workspace}}/reset.css ${{github.workspace}}/release/release_web/
          cp ${{github.workspace}}/build/impl/game/*.data ${{github.workspace}}/release/release_web/
          cp ${{github.workspace}}/build/impl/game/*.js ${{github.workspace}}/release/release_web/
          cp ${{github.workspace}}/build/impl/game/*.wasm ${{github.workspace}}/release/release_web/


      - name: Create Archive
        uses: thedoctor0/zip-release@master
        with:
          directory: ${{github.workspace}}/release
          type: 'zip'
          filename: 'release_web.zip'

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{github.workspace}}/release/release_web.zip




